{"version":3,"file":"component---src-pages-index-tsx-156b7dc63eebe628976b.js","mappings":"iLAGA,MAAMA,EAAa,CACjBC,MAAO,UACPC,QAAS,GACTC,WAAY,6BAURC,EAAkDC,IAA4C,IAA3C,MAAEC,EAAK,YAAEC,EAAW,KAAEC,EAAI,SAAEC,GAAU,EAC7F,OACEC,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAKJ,GACLI,EAAAA,cAAAA,IAAAA,KAAIH,GACJG,EAAAA,cAAAA,WAAAA,CAAUC,MAAO,CAACC,QAAS,OAAQC,IAAK,SACrCC,EAAaC,KAAIC,IAAA,IAAC,MAAEC,EAAOV,YAAaW,GAAmB,SAC1DR,EAAAA,cAAAA,QAAAA,CAAOS,IAAG,GAAKX,EAAOS,EAASG,GAAE,YAAcZ,EAAI,IAAIS,EAAMI,YAC3DX,EAAAA,cAAAA,QAAAA,CACEY,KAAK,QACLF,GAAE,YAAcZ,EAAI,KACpBe,KAAI,YAAcf,EAClBS,MAAOA,EAAMI,WACbZ,SAAUA,KACRA,EAASD,EAAMS,EAAM,IAGzBP,EAAAA,cAAAA,OAAAA,KAAOQ,GACD,KAGR,EA4CV,UAvCuCM,KACrC,MAAOC,EAAeC,GAAoBhB,EAAAA,SAAe,IAAIiB,KAEvDC,EAAsBlB,EAAAA,aAAkBmB,IAAsD,IAArD,KAAErB,EAAI,MAAES,GAAwC,EAC7F,MAAMa,EAAiB,IAAIH,IAAIF,GAE/BK,EAAeC,IAAIvB,EAAMS,GAEzBS,EAAiBI,EAAe,GAC/B,CAACL,EAAeC,IAEnB,OACEhB,EAAAA,cAAAA,OAAAA,CAAMC,MAAOX,GACXU,EAAAA,cAAAA,KAAAA,KAAI,gBACFsB,EAAejB,KAAIkB,IAAA,IAAC,MAAC3B,EAAK,KAAEE,EAAI,MAAE0B,EAAK,YAAE3B,GAAY,SACrDG,EAAAA,cAACN,EAAgB,CACfe,IAAKX,EACLF,MAAOA,EACPC,YAAaA,EACbC,KAAMA,EACNC,SAAUA,CAACD,EAAMS,IAAUW,EAAoB,CAAEpB,OAAMS,WACvD,IAEJP,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAI,eACJA,EAAAA,cAAAA,OAAAA,CAAMC,MAAO,CAACwB,WAAY,OAAQjC,QAAS,QACxCuB,EACEW,UACAC,QAAOC,IAAA,IAAEC,EAAGtB,GAAM,SAAKA,EAAQ,CAAC,IAChCF,KAAIyB,IAAA,IAAEhC,EAAMS,GAAM,WAAQT,EAAOS,CAAK,IACtCwB,UACAC,KAAK,OAIP,EAMJ,MAAMC,EAAeA,IAAMjC,EAAAA,cAAAA,QAAAA,KAAO,aASnCsB,EAAwC,CAC5C,CAAE1B,MAAO,aAAc4B,MAAO,EAAG1B,KAAM,KAAMD,YAAa,8CAC1D,CAAED,MAAO,aAAc4B,MAAO,EAAG1B,KAAM,KAAMD,YAAa,0CAC1D,CAAED,MAAO,UAAW4B,MAAO,EAAG1B,KAAM,KAAMD,YAAa,uCACvD,CAAED,MAAO,QAAS4B,MAAO,EAAG1B,KAAM,KAAMD,YAAa,sCACrD,CAAED,MAAO,SAAU4B,MAAO,EAAG1B,KAAM,KAAMD,YAAa,+DACtD,CAAED,MAAO,SAAU4B,MAAO,EAAG1B,KAAM,KAAMD,YAAa,2CACtD,CAAED,MAAO,SAAU4B,MAAO,EAAG1B,KAAM,KAAMD,YAAa,oCACtD,CAAED,MAAO,UAAW4B,MAAO,EAAG1B,KAAM,KAAMD,YAAa,uCACvD,CAAED,MAAO,eAAgB4B,MAAO,EAAG1B,KAAM,KAAMD,YAAa,iDAC5D,CAAED,MAAO,QAAS4B,MAAO,GAAI1B,KAAM,KAAMD,YAAa,6DACtD,CAAED,MAAO,YAAa4B,MAAO,GAAI1B,KAAM,KAAMD,YAAa,iCAC1D,CAAED,MAAO,QAAS4B,MAAO,GAAI1B,KAAM,KAAMD,YAAa,kDACtD,CAAED,MAAO,UAAW4B,MAAO,GAAI1B,KAAM,KAAMD,YAAa,sCACxD,CAAED,MAAO,WAAY4B,MAAO,GAAI1B,KAAM,KAAMD,YAAa,iEACzD,CAAED,MAAO,UAAW4B,MAAO,GAAI1B,KAAM,KAAMD,YAAa,2DACxD,CAAED,MAAO,aAAc4B,MAAO,GAAI1B,KAAM,KAAMD,YAAa,+CAC3D,CAAED,MAAO,YAAa4B,MAAO,GAAI1B,KAAM,KAAMD,YAAa,yCAC1D,CAAED,MAAO,UAAW4B,MAAO,GAAI1B,KAAM,KAAMD,YAAa,mCACxD,CAAED,MAAO,SAAU4B,MAAO,GAAI1B,KAAM,KAAMD,YAAa,4CACvD,CAAED,MAAO,SAAU4B,MAAO,GAAI1B,KAAM,KAAMD,YAAa,6CAQnDO,EAA4C,CAChD,CAAEG,MAAO,EAAGV,YAAa,cACzB,CAAEU,MAAO,EAAGV,YAAa,YACzB,CAAEU,MAAO,EAAGV,YAAa,cACzB,CAAEU,MAAO,EAAGV,YAAa,eACzB,CAAEU,MAAO,EAAGV,YAAa,a","sources":["webpack://shortform-survey/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\"\nimport type { HeadFC, PageProps } from \"gatsby\"\n\nconst pageStyles = {\n  color: \"#232129\",\n  padding: 96,\n  fontFamily: \"Roboto, sans-serif, serif\",\n}\n\ntype SurveyQuestionProps = {\n  title: string,\n  description: string,\n  code: string,\n  onChange: (code: string, score: number) => void\n}\n\nconst QuestionFormItem: React.FC<SurveyQuestionProps> = ({ title, description, code, onChange }) => {\n  return (\n    <div>\n      <h3>{title}</h3>\n      <p>{description}</p>\n      <fieldset style={{display: 'flex', gap: '10px' }}>\n        {panasAnswers.map(({ value, description: answerDescription }) => (\n          <label key={`${code}${value}`} id={`question-${code}-${value.toString()}`}>\n            <input \n              type=\"radio\" \n              id={`question-${code}-0`} \n              name={`question-${code}`} \n              value={value.toString()}\n              onChange={() => {\n                onChange(code, value);\n              }}\n            />\n            <span>{answerDescription}</span>\n          </label>\n        ))}\n      </fieldset>\n    </div>\n  );\n}\n\n\nconst IndexPage: React.FC<PageProps> = () => {\n  const [surveyAnswers, setSurveyAnswers] = React.useState(new Map<string, number>());\n\n  const updateSurveyAnswers = React.useCallback(({ code, value }: { code: string, value: number }) => {\n    const updatedAnswers = new Map(surveyAnswers);\n\n    updatedAnswers.set(code, value);\n\n    setSurveyAnswers(updatedAnswers);\n  }, [surveyAnswers, setSurveyAnswers])\n\n  return (\n    <main style={pageStyles}>\n      <h1>Panas Survey</h1>\n      { panasQuestions.map(({title, code, index, description}) => \n        <QuestionFormItem \n          key={code}\n          title={title} \n          description={description} \n          code={code}\n          onChange={(code, value) => updateSurveyAnswers({ code, value })}\n        />) \n      }\n      <div>\n        <h2>Short code:</h2>\n        <code style={{background: '#eee', padding: '3px' }}>\n          {surveyAnswers\n            .entries()\n            .filter(([_, value]) => value > 0)\n            .map(([code, value]) => `${code}${value}`)\n            .toArray()\n            .join(',')\n          }\n        </code>\n      </div>\n    </main>\n  )\n}\n\nexport default IndexPage\n\nexport const Head: HeadFC = () => <title>Home Page</title>\n\ntype SurveyQuestion = {\n  title: string,\n  description: string,\n  index: number,\n  code: string,\n}\n\nconst panasQuestions: Array<SurveyQuestion> = [\n  { title: 'Interested', index: 1, code: 'In', description: 'Curious or attentive toward something new.' },\n  { title: 'Distressed', index: 2, code: 'Di', description: 'Uneasy, worried, or in emotional pain.' },\n  { title: 'Excited', index: 3, code: 'Ex', description: 'A heightened sense of anticipation.' },\n  { title: 'Upset', index: 4, code: 'Up', description: 'Emotionally troubled or disturbed.' },\n  { title: 'Strong', index: 5, code: 'St', description: 'Confident, *capable*, and physically or emotionally robust.' },\n  { title: 'Guilty', index: 6, code: 'Gu', description: 'Responsible for wrongdoing or mistakes.' },\n  { title: 'Scared', index: 7, code: 'Sc', description: 'An acute sense of fear or alarm.' },\n  { title: 'Hostile', index: 8, code: 'Ho', description: 'Angry, aggressive, or antagonistic.' },\n  { title: 'Enthusiastic', index: 9, code: 'En', description: 'Hopeful and eager about something meaningful.' },\n  { title: 'Proud', index: 10, code: 'Pr', description: 'A sense of satisfaction and self-worth from achievements.' },\n  { title: 'Irritable', index: 11, code: 'Ir', description: 'Easily annoyed or frustrated.' },\n  { title: 'Alert', index: 12, code: 'Al', description: 'Being awake, alert, and responsive to stimuli.' },\n  { title: 'Ashamed', index: 13, code: 'As', description: 'Embarrassed, disgraced or unworthy' },\n  { title: 'Inspired', index: 14, code: 'Ip', description: 'Uplifted or driven to create or achieve something meaningful.' },\n  { title: 'Nervous', index: 15, code: 'Ne', description: 'Emotionally anxious or uneasy about potential outcomes.' },\n  { title: 'Determined', index: 16, code: 'De', description: 'Motivated, and *resolute* in pursuing goals' },\n  { title: 'Attentive', index: 17, code: 'At', description: 'Focused or fixated on a specific task' },\n  { title: 'Jittery', index: 18, code: 'Ji', description: 'Physically nervous or restless.' },\n  { title: 'Active', index: 19, code: 'Ac', description: 'Alive and energized and ready to engage.' },\n  { title: 'Afraid', index: 20, code: 'Af', description: 'Fearful or apprehensive about something.' },\n];\n\ntype SurveyQuestionAnswer = {\n  value: number,\n  description: string;\n}\n\nconst panasAnswers: Array<SurveyQuestionAnswer> = [\n  { value: 0, description: 'Not at all' },\n  { value: 1, description: 'A little' },\n  { value: 2, description: 'Moderately' },\n  { value: 3, description: 'Quite a bit' },\n  { value: 4, description: 'Extremely' }\n]\n"],"names":["pageStyles","color","padding","fontFamily","QuestionFormItem","_ref","title","description","code","onChange","React","style","display","gap","panasAnswers","map","_ref2","value","answerDescription","key","id","toString","type","name","IndexPage","surveyAnswers","setSurveyAnswers","Map","updateSurveyAnswers","_ref3","updatedAnswers","set","panasQuestions","_ref4","index","background","entries","filter","_ref5","_","_ref6","toArray","join","Head"],"sourceRoot":""}